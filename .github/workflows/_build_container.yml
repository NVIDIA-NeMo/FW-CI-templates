# Copyright (c) 2020-2021, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Build container
on:
  workflow_call:
    inputs:
      build-ref:
        required: false
        default: ${{ github.sha }}
        description: Ref (branch or SHA) to build
        type: string
      image-name:
        required: true
        description: Name of image to build & push
        type: string
      build-args:
        required: false
        description: Additional build args to use
        type: string
      dockerfile:
        required: true
        description: Path to dockerfile
        type: string
      image-label:
        required: false
        description: Image label for pruning
        type: string
      prune-filter-timerange:
        required: false
        description: "Go duration strings (e.g. 10m, 1h30m) computed relative to the daemon machine's time"
        type: string
        default: 24h
      use-cache:
        required: false
        type: boolean
        description: 'Improve build-time by using a cache image'
        default: true
    outputs:
      container-uri:
        description: URI of container
        value: nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.run_id }}

defaults:
  run:
    shell: bash -x -e -u -o pipefail {0}

jobs:
  main:
    runs-on: self-hosted-azure-builder
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ github.run_id }}
          ref: ${{ inputs.build-ref }}

      - name: Clean runner cache
        env:
          LABEL: ${{ inputs.image-label }}
        run: |
          docker system prune $([[ "$LABEL" != "" ]] && echo --filter "label=nemo.library=$LABEL" || echo '') --filter "until=${{ inputs.prune-filter-timerange }}" --force

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # We use `docker` driver as this speeds things up for
          # trivial (non-multi-stage) builds.
          driver: docker

      - name: Pull cache images
        if: ${{ inputs.use-cache == 'true' }}
        run: |
          docker pull nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.event.pull_request.number || 'buildcache' }} || true
          docker pull nemoci.azurecr.io/${{ inputs.image-name }}:buildcache || true

          CACHE="\
          nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.event.pull_request.number || 'buildcache' }}
          nemoci.azurecr.io/${{ inputs.image-name }}:buildcache"

          echo "CACHE<<EOF" >> $GITHUB_ENV
          echo "$CACHE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ${{ github.run_id }}/${{ inputs.dockerfile }}
          push: true
          build-args: ${{ inputs.build-args }}
          cache-from: |
            ${{ env.CACHE }}
          cache-to: type=inline
          tags: nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.run_id }}
          context: ${{ github.run_id }}/

      - name: Update PR image
        if: github.event_name == 'pull_request'
        run: |
          docker tag nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.run_id }} nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.event.pull_request.number }}
          docker push nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.event.pull_request.number }}

      - name: Update buildcache image
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag nemoci.azurecr.io/${{ inputs.image-name }}:${{ github.run_id }} nemoci.azurecr.io/${{ inputs.image-name }}:buildcache
          docker push nemoci.azurecr.io/${{ inputs.image-name }}:buildcache

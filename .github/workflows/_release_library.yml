# Copyright (c) 2020-2021, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: "Release"

defaults:
  run:
    shell: bash -x -e -u -o pipefail {0}

on:
  workflow_call:
    inputs:
      release-ref:
        required: true
        description: Ref (SHA or branch) to release
        type: string
      image-name: 
        required: true
        description: Name of image to build & push
        type: string
      build-args: 
        required: false
        description: Additional build args to use
        type: string
      dockerfile:
        required: true
        description: Path to dockerfile
        type: string
      image-label:
        required: false
        description: Image label for pruning
        type: string
      prune-filter-timerange:
        required: false
        description: "Go duration strings (e.g. 10m, 1h30m) computed relative to the daemon machine's time"
        type: string
        default: 24h
      python-package:
        type: string
        description: Name of Python package
      container-workdir:
        type: string
        description: Location of Python package
      library-name:
        type: string
        description: Name of Nemo library
    secrets:
      TWINE_USERNAME:
        required: true
      TWINE_PASSWORD:
        required: true
      SLACK_RELEASE_ENDPOINT:
        required: true

jobs: 
  build-test-publish-wheel:
    uses: NVIDIA/NeMo-FW-CI-templates/.github/workflows/_build_test_publish_wheel.yml@v0.9.2
    with:
      dry-run: false
      build-ref: ${{ inputs.release-ref }}
      image-name: ${{ inputs.image-name }}
      build-args: ${{ inputs.build-args }}
      dockerfile: ${{ inputs.dockerfile }}
      image-label: ${{ inputs.image-label }}
      prune-filter-timerange: ${{ inputs.prune-filter-timerange }}
      python-package: ${{ inputs.python-package }}
      container-workdir: ${{ inputs.container-workdir }}
      environment: main
    secrets:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      
  create-gh-release:
    needs: [build-test-publish-wheel]
    runs-on: ubuntu-latest
    environment: 
      name: main
    env:
      REPOSITORY: ${{ github.repository }}
      PROJECT_NAME: ${{ inputs.library-name }}
      VERSION: ${{ needs.build-test-publish-wheel.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ github.run_id }}

      - name: Create release
        id: version-number
        run: |
          cd ${{ github.run_id }}
          
          IS_PRERELEASE=$([[ "$VERSION" == *rc* ]] && echo "true" || echo "false")
          NAME="NVIDIA $PROJECT_NAME ${VERSION}"

          if [[ "$IS_PRERELEASE" == "true" ]]; then
            DATE=$(date +"%Y-%m-%d")
            CHANGELOG="Prerelease: $NAME ($DATE)"
          else
            CHANGELOG=$(awk '/^## '"$NAME"'/{flag=1; next} /^## /{flag=0} flag' CHANGELOG.md)
            CHANGELOG=$(echo "$CHANGELOG" | sed '/./,$!d' | sed ':a;N;$!ba;s/\n$//')
          fi

          PAYLOAD=$(jq -nc \
                      --arg TAG_NAME "v${VERSION}" \
                      --arg CI_COMMIT_BRANCH "${{ github.sha }}" \
                      --arg NAME "$NAME" \
                      --arg BODY "$CHANGELOG" \
                      --arg PRERELEASE "$IS_PRERELEASE" \
                      '{
                        "tag_name": $TAG_NAME,
                        "target_commitish": $CI_COMMIT_BRANCH,
                        "name": $NAME,
                        "body": $BODY,
                        "draft": false,
                        "prerelease": $PRERELEASE,
                        "generate_release_notes": false
                      }'
                  )

          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$REPOSITORY/releases \
            -d "$PAYLOAD"

  notify:
    needs: [build-test-publish-wheel, create-gh-release]
    runs-on: ubuntu-latest
    # environment: main
    env:
      GH_URL: https://github.com/${{ github.repository }}/releases/tag/v${{ needs.build-test-publish-wheel.outputs.version }}
      PYPI_URL: https://pypi.org/project/${{ needs.build-test-publish-wheel.outputs.pypi-name }}/${{ needs.build-test-publish-wheel.outputs.version }}/
      SLACK_WEBHOOK: ${{ secrets.SLACK_RELEASE_ENDPOINT }}
      PROJECT_NAME: ${{ inputs.library-name }}
      VERSION: ${{ needs.build-test-publish-wheel.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: NVIDIA/NeMo-FW-CI-templates
          ref: v0.5.0
          path: send-slack-alert

      - name: Send Slack alert
        uses: ./send-slack-alert/.github/actions/send-slack-alert
        env:
          MESSAGE: |
            We have released `${{ env.VERSION }}` of `${{ env.PROJECT_NAME }}` ðŸš€âœ¨ðŸŽ‰

            â€¢ <${{ env.GH_URL }}|GitHub release>
            â€¢ <${{ env.PYPI_URL }}|PyPi release>
            
        with:
          message: ${{ env.MESSAGE }}
          webhook: ${{ env.SLACK_WEBHOOK }}

# Copyright (c) 2020-2021, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Run test

on:
  workflow_call:
    inputs:
      runner:
        type: string
        description: Runner to use for test
        required: true
      timeout:
        type: number
        description: Max runtime of test in minutes
        required: false
        default: 10
      script:
        type: string
        description: Test script to execute
        required: true
      after_script:
        type: string
        description: Script to run after main test
        required: false
        default: ":"
      is_optional:
        type: boolean
        description: Failure will cancel all other tests if set to true
        required: false
        default: false
    outputs:
      conclusion:
        description: Conclusion of main test step
        value: ${{ jobs.main.outputs.conclusion }}
      log:
        description: Last 2000 characters of the test step's log
        value: ${{ jobs.main.outputs.log }} 
jobs:
  
  main:
    runs-on: ${{ inputs.RUNNER }} 
    outputs:
      conclusion: ${{ steps.main.conclusion }}
      log: ${{ steps.main.outputs.log }}
    steps:
        - name: Docker system cleanup
          run: |
            docker system prune -a --filter "until=48h" --force || true

        - name: Docker pull image
          run: |
            docker pull nemoci.azurecr.io/nemo_aligner_container:${{ github.run_id }}

        - name: Start container
          run: |
            docker run --rm -d \
              --name nemo_container_${{ github.run_id }} \
              --runtime=nvidia \
              --gpus all \
              --shm-size=64g \
              --env TRANSFORMERS_OFFLINE=0 \
              --env HYDRA_FULL_ERROR=1 \
              --env HF_HOME=/home/TestData/aligner/hf_home \
              --env ALIGNER_CI_DIR=/home/TestData/aligner \
              --env ALIGNER_REPO_DIR=/opt/NeMo-Aligner \
              --volume /mnt/datadrive/TestData/aligner/checkpoints:/home/TestData/aligner/checkpoints:ro \
              --volume /mnt/datadrive/TestData/aligner/hf_home/hub:/home/TestData/aligner/hf_home/hub:ro \
              nemoci.azurecr.io/nemo_aligner_container:${{ github.run_id }} \
              bash -c "sleep $(( ${{ inputs.TIMEOUT }} * 60 + 60 ))"
  
        - id: main
          name: Run main script
          timeout-minutes: ${{ inputs.TIMEOUT }}
          run: |
            # Print the host driver for debugging
            nvidia-smi
            mkdir -p ${{ github.run_id }}
            cd ${{ github.run_id }}/

            set +e
            (
            set -e

            cmd=$(cat <<"RUN_TEST_EOF"
            nvidia-smi
            # Sanity check the driver/cuda combo
            cudaCheck
            # In case git commands need to be run inside Aligner
            git config --global --add safe.directory $ALIGNER_REPO_DIR
            ${{ inputs.SCRIPT }}
            RUN_TEST_EOF
            )
            docker exec nemo_container_${{ github.run_id }} bash -eux -o pipefail -c "$cmd"
            ) 2> >(tee err.log)

            EXIT_CODE=$?

            echo "log=$(tail -c 2000 err.log |  base64 -w 0)" >> "$GITHUB_OUTPUT"
            
            exit $EXIT_CODE

        - uses: "NVIDIA/NeMo-FW-CI-templates/.github/actions/cancel-workflow@main"
          if: failure() && inputs.IS_OPTIONAL == false

        - name: after_script
          if: always() && inputs.AFTER_SCRIPT != ':'
          run: |
            cmd=$(cat <<"RUN_TEST_EOF"
            ${{ inputs.AFTER_SCRIPT }}
            RUN_TEST_EOF
            )
            docker exec nemo_container_${{ github.run_id }} bash -eux -o pipefail -c "$cmd"

        - name: Container shutdown
          if: always()
          run: |
            docker container stop nemo_container_${{ github.run_id }} || true
            docker container rm nemo_container_${{ github.run_id }} || true